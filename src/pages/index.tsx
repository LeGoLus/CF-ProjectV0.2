import { type NextPage } from "next";
import Head from "next/head";
import { useState, type FormEventHandler, use } from "react";
import Task from "../components/task";
import { trpc } from "../utils/trpc";
import { signOut, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import Link from "next/link";

const Todo: NextPage = () => {
  const router = useRouter();
  const util = trpc.useContext();
  const [task, setTask] = useState("");
  const { data: todos = [] } = trpc.todo.getAll.useQuery();
  const { data: session, status } = useSession();
  const { data: userRoleData } = trpc.user.getRole.useQuery({
    email: session?.user?.email, // Assuming email is stored in session
  });
  // Extract the userRole from the userRoleData
  const userRole = userRoleData?.role;
  const createTodo = trpc.todo.create.useMutation({
    onSuccess() {
      util.todo.invalidate();
    },
  });

  const handleSubmit: FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    await createTodo.mutateAsync({ task });
    setTask("");
  };

  if (status == "loading") {
    return <p>Loading ...</p>;
  }
  if (status == "unauthenticated") {
    router.push("/login");
    return <p>Access denied!</p>;
  }
  if (status == "authenticated") {
    if (!userRole) {
      return <p>Not have user Role</p>;
    }
    
  }
  //if not have role and session
  if (!session || !userRole) {
    return <p>Loading ...</p>;
  }


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen items-center justify-center">
        <div className="absolute top-4 right-4">
          Welcome {session?.user?.email}
          <br />
          Role {userRole}
          <button
            onClick={() => signOut({ callbackUrl: "/login" })}
            className="ml-4 font-semibold text-purple-800 underline underline-offset-2"
          >
            Logout?
          </button>
        </div>
        <div className="mx-auto w-full px-4 py-8 shadow lg:w-1/3">
          <div className="mb-6 flex items-center">
            <h1 className="mr-6 text-4xl font-bold text-purple-600">
              {" "}
              TO DO APP
            </h1>
          </div>
          <form onSubmit={handleSubmit} className="relative">
            <input
              onChange={(e) => setTask(e.target.value)}
              value={task}
              name="task"
              type="text"
              placeholder="What needs to be done today?"
              className="border-grey-600 w-full rounded border px-2 py-3 outline-none"
            />
          </form>
          {/* {userRole === "ADMIN" && (
          <div>
            <Link href="/home-page">Homepage</Link>
          </div>
        )}

        {userRole === "MANAGER" && (
          <div>
            <Link href="/dashboard-page"></Link>
          </div>
        )}

        {userRole !== "ADMIN" && userRole !== "MANAGER" && (
          <div>
            <Link href="/"></Link>
          </div>
         )} */}
          <ul className="list-reset">
            {todos.map((todo) => (
              <Task key={todo.id} todo={todo} />
            ))}
          </ul>
          <div className="mt-8 flex items-center justify-between">
          <Link href="/home-page">Homepage</Link>
          </div>
          <div className="mt-8 flex items-center justify-between">
          <Link href="/createDocument">Create Document</Link>
          </div>
          <div className="mt-8 flex items-center justify-between">
          <Link href="/createProject">Create Project</Link>
          </div>

          


        </div>
      </div>
    </>
  );
};

export default Todo;
